import datetime
import base64
import io

import requests
from disnake import HTTPException
from disnake.ext import commands
import disnake
from pymongo import MongoClient
import config
from disnake import Option, OptionType


class MyView(disnake.ui.StringSelect):
    def __init__(self):
        options = [
            disnake.SelectOption(
                label="–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∫–∞–Ω–∞–ª",
                description="–ë–æ—Ç —Å–æ–∑–¥–∞—Å—Ç –∫–∞–Ω–∞–ª –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç —á–∞—Ç —Å–∞–º",
                emoji='‚öô',
            ),
            disnake.SelectOption(
                label="–í—ã–±—Ä–∞—Ç—å –∏–º–µ—é—â–∏–π—Å—è",
                description="–í—ã —É–∫–∞–∂–∏—Ç–µ –∫–∞–Ω–∞–ª –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏",
                emoji='üó≥',
            )
        ]

        super().__init__(
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ",
            min_values=1,
            max_values=1,
            options=options,
            custom_id="select1"
        )

    class MyViewx(disnake.ui.ChannelSelect):
        def __init__(self):
            super().__init__(
                placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–Ω–∞–ª",
                channel_types=[disnake.ChannelType.text],
                min_values=1,
                max_values=1,
                custom_id="select2"
            )


class Slash(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.cluster = MongoClient(config.config["database"])
        self.collection = self.cluster.AnonChat.anon
        self.search = self.cluster.AnonChat.search
        self.stats = self.cluster.AnonChat.stats
        self.captcha = self.cluster.AnonChat.captcha
        self.guild = self.cluster.AnonChat.guilds

    @commands.slash_command(name="start", description="–î–æ–±–∞–≤–ª—è–µ—Ç –≤–∞—Å –≤ –æ—á–µ—Ä–µ–¥—å –≤ –∞–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç", dm_permission=False)
    async def start(self, inter):
        try:
            await inter.response.defer(ephemeral=True)
        except:
            pass
        post2 = {
            "_id": inter.author.id,
            "search": 0,
            "guild": inter.author.guild.id
        }
        if 0 == self.search.count_documents({"_id": inter.author.id}):
            self.search.insert_one(post2)
        find = self.search.find_one({'_id': inter.author.id})['search']
        if find == 1:
            emb = disnake.Embed(title="–í—ã —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–µ–∂–∏–º–µ –ø–æ–∏—Å–∫–∞", description="–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–∫–ª—é—á–∏—Ç—å –µ–≥–æ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç!",
                                color=disnake.Color.random(), timestamp=datetime.datetime.now())
            emb.set_footer(text=f"{inter.author.name}", icon_url=inter.author.avatar)
            await inter.send(embed=emb, ephemeral=True)
        else:
            try:
                comp = self.collection.find_one({'_id': inter.author.id})['comp']
            except:
                comp = 0
            if comp != 0:
                emb = disnake.Embed(title="–í—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∞–Ω–æ–Ω–∏–º–Ω–æ–º —á–∞—Ç–µ",
                                    description="–ß—Ç–æ–±—ã —Å–º–µ–Ω–∏—Ç—å —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É \"–°—Ç–æ–ø\" –∏ –Ω–∞—á–Ω–∏—Ç–µ –Ω–æ–≤—ã–π –ø–æ–∏—Å–∫!",
                                    color=disnake.Color.random(), timestamp=datetime.datetime.now())
                emb.set_footer(text=f"{inter.author.name}", icon_url=inter.author.avatar)
                await inter.send(embed=emb, ephemeral=True)
            else:
                self.search.update_one({"_id": inter.author.id}, {"$set": {'search': 1}})
                rows = self.search.find().sort("search", -1)
                succes = False
                for row in rows:
                    if int(inter.author.id) == row["_id"]:
                        continue
                    try:
                        guild = self.search.find_one({'_id': row["_id"]})['guild']
                        guild = await self.bot.fetch_guild(guild)
                    except:
                        guild = None
                    if guild is None:
                        continue
                    else:
                        try:
                            member = await guild.fetch_member(row["_id"])
                        except:
                            member = None
                        if member is None:
                            continue
                        try:
                            last_check = self.collection.find_one({'_id': row["_id"]})['comp']
                        except:
                            last_check = 0
                        if last_check != 0:
                            continue
                        else:
                            try:
                                rep = self.stats.find_one({'_id': row["_id"]})["rep"]
                            except:
                                rep = 0
                            if rep >= 0:
                                emoji = "üëç"
                            else:
                                emoji = "üëé"
                            emb = disnake.Embed(title="–°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –Ω–∞–π–¥–µ–Ω", description=f"–ú–æ–∂–µ—Ç–µ –Ω–∞—á–∏–Ω–∞—Ç—å –æ–±—â–∞—Ç—å—Å—è!\n–†–µ–ø—É—Ç–∞—Ü–∏—è –≤–∞—à–µ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞: {rep}{emoji}",
                                                color=disnake.Color.random(), timestamp=datetime.datetime.now())

                            if 0 == self.stats.count_documents({"_id": inter.author.id}):
                                rep1 = 0
                            else:
                                try:
                                    rep1 = self.stats.find_one({'_id': inter.author.id})["rep"]
                                except:
                                    rep1 = 0

                            if rep1 >= 0:
                                emoji1 = "üëç"
                            else:
                                emoji1 = "üëé"
                            emb11 = disnake.Embed(title="–°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –Ω–∞–π–¥–µ–Ω", description=f"–ú–æ–∂–µ—Ç–µ –Ω–∞—á–∏–Ω–∞—Ç—å –æ–±—â–∞—Ç—å—Å—è!\n–†–µ–ø—É—Ç–∞—Ü–∏—è –≤–∞—à–µ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞: {rep1}{emoji1}",
                                                  color=disnake.Color.random(), timestamp=datetime.datetime.now())
                            try:
                                msg = await inter.author.send(embed=emb)
                            except:
                                emb1 = disnake.Embed(title="–ó–∞–∫—Ä—ã—Ç–∞—è –ª–∏—á–∫–∞", description="–£ –≤–∞—Å –∑–∞–∫—Ä—ã—Ç–∞ –ª–∏—á–∫–∞! –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ –≤ –∞–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç.",
                                                     color=disnake.Color.random(), timestamp=datetime.datetime.now())
                                lol = {"_id": inter.author.id}
                                self.collection.delete_one(lol)
                                self.search.delete_one(lol)
                                await inter.send(embed=emb1, ephemeral=True)
                            else:
                                try:
                                    msg1 = await member.send(embed=emb11)
                                except:
                                    emb2 = disnake.Embed(title="–ó–∞–∫—Ä—ã—Ç–∞—è –ª–∏—á–∫–∞", description="–£ –≤–∞—à–µ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –∑–∞–∫—Ä—ã—Ç–∞—è –ª–∏—á–∫–∞!",
                                                         color=disnake.Color.random(), timestamp=datetime.datetime.now())
                                    lol = {"_id": member.id}
                                    self.collection.delete_one(lol)
                                    self.search.delete_one(lol)
                                    await inter.author.send(embed=emb2)
                                    continue
                                else:
                                    lol = {"_id": member.id}
                                    self.search.delete_one(lol)

                                    lol = {"_id": inter.author.id}
                                    self.search.delete_one(lol)

                                    post1 = {
                                        "_id": inter.author.id,
                                        "guild": inter.guild.id,
                                        "comp": member.id,
                                        "channel": msg.channel.id,
                                        "history": []
                                    }
                                    self.collection.insert_one(post1)

                                    post2 = {
                                        "_id": member.id,
                                        "guild": guild.id,
                                        "comp": inter.author.id,
                                        "channel": msg1.channel.id,
                                        "history": []
                                    }

                                    self.collection.insert_one(post2)

                                    post = {
                                        "_id": inter.author.id,
                                        "messages": 0,
                                        "chats": 0,
                                        "rep": 0,
                                        "warns": 0,
                                        "last_comp": 0,
                                        "bot_chat_id": msg.channel.id,
                                        "banned": 0,
                                        "stop_m": 0,
                                        "aboutme": "–ù–µ —É–∫–∞–∑–∞–Ω–æ",
                                        "age": 0,
                                        "name": "–ù–µ —É–∫–∞–∑–∞–Ω–æ",
                                        "gender": 0
                                    }
                                    if 0 == self.stats.count_documents({"_id": inter.author.id}):
                                        self.stats.insert_one(post)
                                    else:
                                        self.stats.update_one({"_id": inter.author.id}, {"$set": {'bot_chat_id': msg.channel.id}})

                                    try:
                                        chats = self.stats.find_one({'_id': inter.author.id})['chats']
                                    except:
                                        chats = 0
                                    self.stats.update_one({"_id": inter.author.id}, {"$set": {'chats': chats + 1}})

                                    self.stats.update_one({"_id": inter.author.id}, {"$set": {'last_comp': member.id}})

                                    post = {
                                        "_id": member.id,
                                        "messages": 0,
                                        "chats": 0,
                                        "rep": 0,
                                        "warns": 0,
                                        "last_comp": 0,
                                        "bot_chat_id": msg1.channel.id,
                                        "banned": 0,
                                        "stop_m": 0,
                                        "aboutme": "–ù–µ —É–∫–∞–∑–∞–Ω–æ",
                                        "age": 0,
                                        "name": "–ù–µ —É–∫–∞–∑–∞–Ω–æ",
                                        "gender": "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
                                    }
                                    if 0 == self.stats.count_documents({"_id": member.id}):
                                        self.stats.insert_one(post)
                                    else:
                                        self.stats.update_one({"_id": member.id}, {"$set": {'bot_chat_id': msg1.channel.id}})

                                    try:
                                        self.stats.update_one({"_id": member.id}, {"$set": {'last_comp': inter.author.id}})
                                    except:
                                        pass

                                    try:
                                        chats1 = self.stats.find_one({'_id': member.id})['chats']
                                    except:
                                        chats1 = 0
                                    self.stats.update_one({"_id": member.id}, {"$set": {'chats': chats1 + 1}})

                                    try:
                                        gg = self.collection.find_one({'_id': member.id})['guild']
                                        chats = self.guild.find_one({'_id': gg})['chats']
                                        self.guild.update_one({"_id": gg}, {"$set": {"chats": chats + 1}})
                                    except:
                                        pass

                                    try:
                                        gg = self.collection.find_one({'_id': inter.author.id})['guild']
                                        chats = self.guild.find_one({'_id': gg})['chats']
                                        self.guild.update_one({"_id": gg}, {"$set": {"chats": chats + 1}})
                                    except:
                                        pass

                                    succes = True

                                    buttons = disnake.ui.View()
                                    buttons.add_item(disnake.ui.Button(label='', emoji='üëç', style=disnake.ButtonStyle.gray, custom_id="like", disabled=True))
                                    buttons.add_item(disnake.ui.Button(label='', emoji='üëé', style=disnake.ButtonStyle.gray, custom_id="dlike", disabled=True))
                                    buttons.add_item(disnake.ui.Button(label='', emoji='‚ö†', style=disnake.ButtonStyle.gray, custom_id="report", disabled=True))

                                    try:
                                        channel1 = await self.bot.fetch_channel(self.stats.find_one({'_id': member.id})['bot_chat_id'])
                                    except:
                                        channel1 = None
                                    m1_id = self.stats.find_one({'_id': member.id})['stop_m']
                                    if channel1 is None:
                                        pass
                                    else:
                                        try:
                                            msg1 = await channel1.fetch_message(m1_id)
                                            await msg1.edit(view=buttons)
                                        except:
                                            pass

                                    try:
                                        channel2 = await self.bot.fetch_channel(self.stats.find_one({'_id': inter.author.id})['bot_chat_id'])
                                    except:
                                        channel2 = None
                                    m2_id = self.stats.find_one({'_id': inter.author.id})['stop_m']
                                    if channel2 is None:
                                        pass
                                    else:
                                        try:
                                            msg2 = await channel2.fetch_message(m2_id)
                                            await msg2.edit(view=buttons)
                                        except:
                                            pass

                                    break

                if succes:
                    await inter.delete_original_message()
                else:
                    emb = disnake.Embed(title="–ù–∏–∫–æ–≥–æ –Ω–µ—Ç—É", description="*–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –Ω–∞–π—Ç–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å.*\n"
                                                                         "*–ù–æ –≤—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞—Ç—å—Å—è –≤ —Ä–µ–∂–∏–º–µ –ø–æ–∏—Å–∫–∞ –∏ –∂–¥–∞—Ç—å –ª—É—á—à–∏—Ö –≤—Ä–µ–º—ë–Ω!*",
                                        color=disnake.Color.random(), timestamp=datetime.datetime.now())
                    emb.set_footer(text=f"{inter.author.name}", icon_url=inter.author.avatar)
                    await inter.send(embed=emb, ephemeral=True)

    @commands.slash_command(name="stop", description="–£–¥–∞–ª—è–µ—Ç –≤–∞—Å –∏–∑ –æ—á–µ—Ä–µ–¥–∏ –∏–ª–∏ —á–∞—Ç–∞", dm_permission=True)
    async def stop(self, inter):
        try:
            await inter.response.defer(ephemeral=True)
        except:
            pass
        try:
            findd = self.collection.find_one({'_id': inter.author.id})['comp']
        except:
            findd = 0
        if findd != 0:
            try:
                g2 = self.collection.find_one({'_id': findd})['guild']
                guild_2 = await self.bot.fetch_guild(g2)
            except:
                guild_2 = None

            buttons = disnake.ui.View()
            buttons.add_item(disnake.ui.Button(label='', emoji='üëç', style=disnake.ButtonStyle.gray, custom_id="like"))
            buttons.add_item(disnake.ui.Button(label='', emoji='üëé', style=disnake.ButtonStyle.gray, custom_id="dlike"))
            buttons.add_item(disnake.ui.Button(label='', emoji='‚ö†', style=disnake.ButtonStyle.gray, custom_id="report"))

            try:
                member = await guild_2.fetch_member(int(findd))
            except:
                member = None

            try:
                emb = disnake.Embed(title="–ö–æ–Ω–µ—Ü —á–∞—Ç–∞", description="–í–∞—à —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ –æ—Å—Ç–∞–Ω–æ–≤–∏–ª —á–∞—Ç, —É–≤—ã –∏ –∞—Ö...",
                                    color=disnake.Color.random(), timestamp=datetime.datetime.now())
                emb.set_footer(text=f"{member.name}", icon_url=member.avatar)

                m = await member.send(embed=emb, view=buttons)
                self.stats.update_one({"_id": member.id}, {"$set": {'stop_m': m.id}})
            except:
                pass
            try:
                emb1 = disnake.Embed(title="–ö–æ–Ω–µ—Ü —á–∞—Ç–∞", description="–í—ã –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ —á–∞—Ç, –∫–ª–∞—Å—Å...\n",
                                     color=disnake.Color.random(), timestamp=datetime.datetime.now())
                emb1.set_footer(text=f"{inter.author.name}", icon_url=inter.author.avatar)

                m1 = await inter.author.send(embed=emb1, view=buttons)
                self.stats.update_one({"_id": inter.author.id}, {"$set": {'stop_m': m1.id}})
            except:
                pass

            lol = {"_id": inter.author.id}
            self.collection.delete_one(lol)

            lol = {"_id": findd}
            self.collection.delete_one(lol)

            emb = disnake.Embed(title="–°–≤—è–∑—å —Ä–∞–∑–æ—Ä–≤–∞–Ω–∞", description="–í—ã —Ä–∞–∑–æ—Ä–≤–∞–ª–∏ —Å–≤—è–∑—Ç—å —Å —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–º –∏ –≤—ã—à–ª–∏ –∏–∑ –ø–æ–∏—Å–∫–∞.",
                                color=disnake.Color.random(), timestamp=datetime.datetime.now())
            emb.set_footer(text=f"{inter.author.name}", icon_url=inter.author.avatar)
            await inter.send(embed=emb, ephemeral=True)
        else:
            try:
                x = self.search.count_documents({"_id": inter.author.id})
            except:
                x = 0
            if 0 == x:
                emb = disnake.Embed(title="–û—à–∏–±–∫–∞", description="–í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –ø–æ–∏—Å–∫–µ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞",
                                    color=disnake.Color.random(), timestamp=datetime.datetime.now())
                emb.set_footer(text=f"{inter.author.name}", icon_url=inter.author.avatar)
                await inter.send(embed=emb, ephemeral=True)
            else:
                lol = {"_id": inter.author.id}
                self.search.delete_one(lol)

                emb = disnake.Embed(title="–ü–æ–∏—Å–∫ –æ–∫–æ–Ω—á–µ–Ω", description="–í—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏ –ø–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞",
                                    color=disnake.Color.random(), timestamp=datetime.datetime.now())
                emb.set_footer(text=f"{inter.author.name}", icon_url=inter.author.avatar)
                await inter.send(embed=emb, ephemeral=True)

    @commands.slash_command(name="help", description="–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥", dm_permission=False)
    async def help(self, inter):
        try:
            await inter.response.defer(ephemeral=True)
        except HTTPException:
            pass
        embed = disnake.Embed(title="–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É", description="</start:1130292300795351120> *- –≤–æ–π—Ç–∏ –≤ –∞–Ω–æ–Ω –±–µ–∑ —É—Å—Ç–∞–Ω–æ–≤–∫–∏*\n"
                                                                  "</stop:1130292300795351121> *- –≤—ã–π—Ç–∏ –∏–∑ –∞–Ω–æ–Ω–∞ –±–µ–∑ —É—Å—Ç–∞–Ω–æ–≤–∫–∏*\n\n"
                                                                  "</help:1130292300795351122> *- —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ*\n"
                                                                  "</info:1130292300795351123> *- –∏–Ω—Ñ–∞ –æ –±–æ—Ç–µ*\n"
                                                                  "</setup:1130292300795351124> *- —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–Ω–æ–Ω*\n"
                                                                  "</unsetup:1130292300795351125> *- —É–¥–∞–ª–∏—Ç—å –∞–Ω–æ–Ω*\n\n"
                                                                  "</profile:1130297580975292486> *- –≤–∞—à–∞ —Å—Ç–∞—Ç–∞*\n"
                                                                  "</send profile:1167266696017498212> *- –æ—Ç–ø—Ä–∞–≤–∏—Ç –ø—Ä–æ—Ñ–∏–ª—å*\n"
                                                                  "</bug:1130292300795351129> *- –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á—ë—Ç –æ–± –æ—à–∏–±–∫–µ –±–æ—Ç–∞*\n\n"
                                                                  "</say:1167220395586375721> *- –æ—Ç–ø—Ä–∞–≤–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ª–∏—Ü–∞ –±–æ—Ç–∞*\n"
                                                                  "</up:1162465920992673812> *- –∞–ø–Ω—É—Ç—å –±–æ—Ç–∞ –Ω–∞ [—Å–∞–π—Ç–µ](https://boticord.top/)*",
                              color=disnake.Color.random(), timestamp=datetime.datetime.now())
        embed.set_thumbnail(url=self.bot.user.avatar)
        embed.set_footer(text=f"{inter.author.name}", icon_url=inter.author.avatar)
        await inter.send(embed=embed)

    @commands.slash_command(name="info", description="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ", dm_permission=False)
    async def info(self, inter):
        try:
            await inter.response.defer(ephemeral=True)
        except HTTPException:
            pass
        ping = self.bot.latency * 1000

        emb = disnake.Embed(title=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ",
                            description=f"„Éª *Developer -*  **xlvlocl**\n"
                                        f"„Éª **[–°–µ—Ä–≤–µ—Ä –ø–æ–¥–¥–µ—Ä–∂–∫–∏](https://discord.gg/4cuBcTrjh4)**\n"
                                        f"„Éª *–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤* **[—Ç—É—Ç](https://bots.server-discord.com/1078924878071214110)** *–∏* **[—Ç—É—Ç](https://boticord.top/bot/1078924878071214110)**\n\n"
                                        f"„Éª *–ü–∏–Ω–≥ -*  **{int(ping)}** *–º—Å*\n"
                                        f"„Éª *–°–µ—Ä–≤–µ—Ä–æ–≤ -*  **{len(self.bot.guilds)}**\n"
                                        f"„Éª **[–î–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞](https://discord.com/api/oauth2/authorize?client_id=1078924878071214110&permissions=67632&scope=bot%20applications.commands)**",
                            colour=disnake.Color.random(), timestamp=datetime.datetime.now())

        emb.set_thumbnail(url=self.bot.user.avatar)
        emb.set_footer(text=f"{inter.author.name}", icon_url=inter.author.avatar)
        await inter.send(embed=emb)

    @commands.slash_command(name="setup", description="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–Ω–æ–Ω-—á–∞—Ç", dm_permission=False)
    @commands.default_member_permissions(administrator=True)
    async def setup(self, inter):
        try:
            await inter.response.defer(ephemeral=True)
        except HTTPException:
            pass
        post = {
            '_id': inter.guild.id,
            'channel': 0,
            'chats': 0,
            'messages': 0
        }
        if 0 == self.guild.count_documents({"_id": inter.guild.id}):
            self.guild.insert_one(post)

        try:
            channel = self.guild.find_one({'_id': inter.guild.id})['channel']
        except:
            channel = 0

        if channel != 0:
            embx = disnake.Embed(title="–û—à–∏–±–∫–∞", description=f"–ù–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∞–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç!\n"
                                                             f"–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –µ–≥–æ —É–¥–∞–ª–∏—Ç—å, —Ç–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É </unsetup:1130292300795351125>",
                                 color=disnake.Color.random(), timestamp=datetime.datetime.now())
            embx.set_footer(text=f"{inter.author.name}", icon_url=inter.author.avatar)
            await inter.send(embed=embx)
        else:
            view = disnake.ui.View()
            view.add_item(MyView())
            await inter.send(view=view)

    @commands.Cog.listener()
    async def on_interaction(self, inter: disnake.MessageInteraction):
        try:
            await inter.response.defer(ephemeral=True)
        except HTTPException:
            pass
        try:
            a = inter.component.custom_id
        except:
            a = None
        if a == "select1":
            if inter.values[0] == "–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∫–∞–Ω–∞–ª":
                if inter.guild.id == 680172831132352520:
                    buttons = disnake.ui.View()
                    buttons.add_item(disnake.ui.Button(label='–°—Ç–∞—Ä—Ç', emoji='<:1_:1064240182422945842> ', style=disnake.ButtonStyle.gray, custom_id="start"))
                    buttons.add_item(disnake.ui.Button(label='–°—Ç–æ–ø', emoji='<:__:1064242340954390538> ', style=disnake.ButtonStyle.gray, custom_id="stop"))
                    buttons.add_item(disnake.ui.Button(label='–°–ø—Ä–∞–≤–∫–∞', emoji='<:1_:1064243510938718218> ', style=disnake.ButtonStyle.gray, custom_id="info"))
                    emb = disnake.Embed(color=0xffff00)
                    emb1 = disnake.Embed(title="–°–æ–≤–µ—Ç", description=f"–†–µ–∫–æ–º–µ–Ω–¥—É—é –æ—Ç–∫–ª—é—á–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–∏—Å–∞—Ç—å –≤ —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª!\n"
                                                                    f"–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª–µ–Ω–æ —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥", color=disnake.Color.random(), timestamp=datetime.datetime.now())
                    emb.set_image("https://cdn.discordapp.com/attachments/971521760732258397/1145105423268073532/standard_1.gif")
                else:
                    buttons = disnake.ui.View()
                    buttons.add_item(disnake.ui.Button(label='–°—Ç–∞—Ä—Ç', emoji='<:321:1095340832711770222>', style=disnake.ButtonStyle.gray, custom_id="start"))
                    buttons.add_item(disnake.ui.Button(label='–°—Ç–æ–ø', emoji='<:123:1095340836826394644>', style=disnake.ButtonStyle.gray, custom_id="stop"))
                    buttons.add_item(disnake.ui.Button(label='–ò–Ω—Ñ–æ', emoji='<:456:1095340827896725504>', style=disnake.ButtonStyle.gray, custom_id="info"))
                    emb1 = disnake.Embed(title="–°–æ–≤–µ—Ç", description=f"–†–µ–∫–æ–º–µ–Ω–¥—É—é –æ—Ç–∫–ª—é—á–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–∏—Å–∞—Ç—å –≤ —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª!\n"
                                                                    f"–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª–µ–Ω–æ —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥", color=disnake.Color.random(), timestamp=datetime.datetime.now())
                    emb = disnake.Embed(color=disnake.Color.dark_gray())
                    emb.set_image(file=disnake.File('files/banner.png'))
                try:
                    channel = await inter.channel.category.create_text_channel("–ê–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç")
                    await channel.send(embed=emb, view=buttons)
                    await channel.send(embed=emb1, delete_after=30)
                    self.guild.update_one({"_id": inter.guild.id}, {"$set": {'channel': int(channel.id)}})
                except:
                    try:
                        channel = await inter.guild.create_text_channel("–ê–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç")
                        await channel.send(embed=emb, view=buttons)
                        await channel.send(embed=emb1, delete_after=30)
                        self.guild.update_one({"_id": inter.guild.id}, {"$set": {'channel': int(channel.id)}})
                        await inter.delete_original_message()
                    except:
                        embx = disnake.Embed(title="–û—à–∏–±–∫–∞", description=f"–£ –±–æ—Ç–∞ –Ω–µ—Ç –ø—Ä–∞–≤–∞ –ø–∏—Å–∞—Ç—å –≤ —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª / —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–∞–Ω–∞–ª",
                                             color=disnake.Color.random(), timestamp=datetime.datetime.now())
                        embx.set_footer(text=f"{inter.author.name}", icon_url=inter.author.avatar)
                        await inter.delete_original_message()
                        await inter.send(embed=embx, ephemeral=True)
                    else:
                        embx = disnake.Embed(title="–£—Å–ø–µ—à–Ω–æ!", description=f"*–ê–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª–µ* {channel.mention}",
                                             color=disnake.Color.random(), timestamp=datetime.datetime.now())
                        embx.set_footer(text=f"{inter.author.name}", icon_url=inter.author.avatar)
                        await inter.send(embed=embx, ephemeral=True)
                else:
                    embx = disnake.Embed(title="–£—Å–ø–µ—à–Ω–æ!", description=f"*–ê–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª–µ* {channel.mention}",
                                         color=disnake.Color.random(), timestamp=datetime.datetime.now())
                    embx.set_footer(text=f"{inter.author.name}", icon_url=inter.author.avatar)
                    await inter.delete_original_message()
                    await inter.send(embed=embx, ephemeral=True)
            else:
                view = disnake.ui.View()
                view.add_item(MyView.MyViewx())
                await inter.edit_original_response(view=view)
        elif a == "select2":
            if inter.guild.id == 680172831132352520:
                buttons = disnake.ui.View()
                buttons.add_item(disnake.ui.Button(label='–°—Ç–∞—Ä—Ç', emoji='<:1_:1064240182422945842> ', style=disnake.ButtonStyle.gray, custom_id="start"))
                buttons.add_item(disnake.ui.Button(label='–°—Ç–æ–ø', emoji='<:__:1064242340954390538> ', style=disnake.ButtonStyle.gray, custom_id="stop"))
                buttons.add_item(disnake.ui.Button(label='–°–ø—Ä–∞–≤–∫–∞', emoji='<:1_:1064243510938718218> ', style=disnake.ButtonStyle.gray, custom_id="info"))
                emb = disnake.Embed(color=0xffff00)
                emb1 = disnake.Embed(title="–°–æ–≤–µ—Ç", description=f"–†–µ–∫–æ–º–µ–Ω–¥—É—é –æ—Ç–∫–ª—é—á–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–∏—Å–∞—Ç—å –≤ —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª!\n"
                                                                f"–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª–µ–Ω–æ —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥", color=disnake.Color.random(), timestamp=datetime.datetime.now())
                emb.set_image("https://cdn.discordapp.com/attachments/971521760732258397/1145105423268073532/standard_1.gif")
            else:
                buttons = disnake.ui.View()
                buttons.add_item(disnake.ui.Button(label='–°—Ç–∞—Ä—Ç', emoji='<:321:1095340832711770222>', style=disnake.ButtonStyle.gray, custom_id="start"))
                buttons.add_item(disnake.ui.Button(label='–°—Ç–æ–ø', emoji='<:123:1095340836826394644>', style=disnake.ButtonStyle.gray, custom_id="stop"))
                buttons.add_item(disnake.ui.Button(label='–ò–Ω—Ñ–æ', emoji='<:456:1095340827896725504>', style=disnake.ButtonStyle.gray, custom_id="info"))

                emb = disnake.Embed(color=disnake.Color.dark_gray())
                emb.set_image(file=disnake.File('files/banner.png'))
            channel = inter.guild.get_channel(int(inter.values[0]))
            try:
                msg = await channel.send(embed=emb, view=buttons)
            except:
                emb = disnake.Embed(title="–û—à–∏–±–∫–∞", description=f"–£ –±–æ—Ç–∞ –Ω–µ—Ç –ø—Ä–∞–≤–∞ –ø–∏—Å–∞—Ç—å –≤ —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª.",
                                    color=disnake.Color.random(), timestamp=datetime.datetime.now())
                emb.set_footer(text=f"{inter.author.name}", icon_url=inter.author.avatar)
                await inter.send(embed=emb, ephemeral=True)
            else:
                await channel.send(embed=disnake.Embed(title="–°–æ–≤–µ—Ç", description=f"–†–µ–∫–æ–º–µ–Ω–¥—É—é –æ—Ç–∫–ª—é—á–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–∏—Å–∞—Ç—å –≤ —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª!\n"
                                                                                  f"–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª–µ–Ω–æ —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥", color=disnake.Color.random(), timestamp=datetime.datetime.now()), delete_after=30)

                self.guild.update_one({"_id": inter.guild.id}, {"$set": {'channel': int(channel.id)}})

                embx = disnake.Embed(title="–£—Å–ø–µ—à–Ω–æ!", description=f"*–ê–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª–µ* {channel.mention}",
                                     color=disnake.Color.random(), timestamp=datetime.datetime.now())
                embx.set_footer(text=f"{inter.author.name}", icon_url=inter.author.avatar)
                await inter.delete_original_message()
                await inter.send(embed=embx, ephemeral=True)

    @commands.slash_command(name="unsetup", description="–û—Ç–∫–ª—é—á–∏—Ç—å –∞–Ω–æ–Ω-—á–∞—Ç", dm_permission=False)
    @commands.default_member_permissions(administrator=True)
    async def unsetup(self, inter):
        try:
            await inter.response.defer(ephemeral=True)
        except:
            pass
        try:
            channel = self.guild.find_one({'_id': inter.guild.id})['channel']
        except:
            embx = disnake.Embed(title="–û—à–∏–±–∫–∞!", description=f"–ê–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç –Ω–µ –±—ã–ª –≤–∫–ª—é—á–µ–Ω!",
                                 color=disnake.Color.random(), timestamp=datetime.datetime.now())
            embx.set_footer(text=f"{inter.author.name}", icon_url=inter.author.avatar)
            await inter.send(embed=embx)
        else:
            class buttons(disnake.ui.View):
                def __init__(self, bot=self.bot):
                    super().__init__(timeout=30)
                    self.bot = bot
                    self.cluster = MongoClient(config.config["database"])
                    self.guild = self.cluster.AnonChat.guilds

                async def on_timeout(self):
                    try:
                        await inter.delete_original_message()
                    except:
                        pass

                @disnake.ui.button(label='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', emoji='‚úÖ', style=disnake.ButtonStyle.gray)
                async def conf(self, button: disnake.ui.Button, inter: disnake.CommandInteraction):
                    try:
                        await inter.response.defer(ephemeral=True)
                    except HTTPException:
                        pass
                    self.guild.update_one({"_id": inter.guild.id}, {"$set": {"channel": 0}})
                    try:
                        ch = inter.guild.get_channel(int(channel))
                        await ch.delete()
                    except:
                        embx = disnake.Embed(title="–û—à–∏–±–∫–∞", description=f"–ê–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç –æ—Ç–∫–ª—é—á–µ–Ω, –Ω–æ –±–æ—Ç –Ω–µ —Å–º–æ–≥ —É–¥–∞–ª–∏—Ç—å –∫–∞–Ω–∞–ª!",
                                             color=disnake.Color.random(), timestamp=datetime.datetime.now())
                        embx.set_footer(text=f"{inter.author.name}", icon_url=inter.author.avatar)
                        try:
                            await inter.delete_original_message()
                            await inter.send(embed=embx, ephemeral=True)
                        except:
                            pass
                    else:
                        embx = disnake.Embed(title="–£—Å–ø–µ—à–Ω–æ!", description=f"–ê–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç –æ—Ç–∫–ª—é—á–µ–Ω!",
                                             color=disnake.Color.random(), timestamp=datetime.datetime.now())
                        embx.set_footer(text=f"{inter.author.name}", icon_url=inter.author.avatar)
                        try:
                            await inter.delete_original_message()
                            await inter.send(embed=embx, ephemeral=True)
                        except:
                            pass

                @disnake.ui.button(label='–û—Ç–º–µ–Ω–∏—Ç—å', emoji='‚ùå', style=disnake.ButtonStyle.gray)
                async def canc(self, button: disnake.ui.Button, inter: disnake.CommandInteraction):
                    try:
                        await inter.response.defer(ephemeral=True)
                    except HTTPException:
                        pass
                    try:
                        await inter.delete_original_message()
                    except:
                        pass

                @disnake.ui.button(label='–û—Ç–∫–ª—é—á–∏—Ç—å –±–µ–∑ —É–¥–∞–ª–µ–Ω–∏—è', emoji='‚ö†', style=disnake.ButtonStyle.gray)
                async def dell(self, button: disnake.ui.Button, inter: disnake.CommandInteraction):
                    try:
                        await inter.response.defer(ephemeral=True)
                    except HTTPException:
                        pass
                    self.guild.update_one({"_id": inter.guild.id}, {"$set": {"channel": 0}})
                    ch = inter.guild.get_channel(int(channel))
                    if ch is not None:
                        try:
                            await ch.purge(limit=None, check=lambda m: m.author == self.bot.user)
                        except:
                            pass
                        embx = disnake.Embed(title="–£—Å–ø–µ—à–Ω–æ!", description=f"–ê–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç –æ—Ç–∫–ª—é—á–µ–Ω!",
                                             color=disnake.Color.random(), timestamp=datetime.datetime.now())
                        embx.set_footer(text=f"{inter.author.name}", icon_url=inter.author.avatar)
                    else:
                        embx = disnake.Embed(title="–£—Å–ø–µ—à–Ω–æ!", description=f"–ê–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç –æ—Ç–∫–ª—é—á–µ–Ω!",
                                             color=disnake.Color.random(), timestamp=datetime.datetime.now())
                        embx.set_footer(text=f"{inter.author.name}", icon_url=inter.author.avatar)
                    try:
                        await inter.delete_original_message()
                        await inter.send(embed=embx, ephemeral=True)
                    except:
                        pass

            try:
                ch = inter.guild.get_channel(int(channel))
            except:
                ch = None
            if ch is not None:
                embed = disnake.Embed(title="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–∞—à–∏ –Ω–∞–º–µ—Ä–µ–Ω–∏—è", description=f"*–ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è –±–æ—Ç* **—É–¥–∞–ª–∏—Ç** *–∫–∞–Ω–∞–ª* **{ch.mention},** *–≤—ã —É–≤–µ—Ä–µ–Ω—ã?*", color=disnake.Color.red(), timestamp=datetime.datetime.now())
                embed.set_footer(text=f"{inter.author.name}", icon_url=inter.author.avatar)
            else:
                embed = disnake.Embed(title="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–∞—à–∏ –Ω–∞–º–µ—Ä–µ–Ω–∏—è", description=f"*–ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è –±–æ—Ç* **—É–¥–∞–ª–∏—Ç** *–∫–∞–Ω–∞–ª —Å –∞–Ω–æ–Ω–∏–º–Ω—ã–º —á–∞—Ç–æ–º* *–≤—ã —É–≤–µ—Ä–µ–Ω—ã?*", color=disnake.Color.red(), timestamp=datetime.datetime.now())
                embed.set_footer(text=f"{inter.author.name}", icon_url=inter.author.avatar)
            message = await inter.send(embed=embed, view=buttons())

    @commands.slash_command(
        name='send',
        description="",
        dm_permission=True)
    async def sendpr(self, inter):
        pass

    @sendpr.sub_command(
        name='profile',
        description=f'–û—Ç–ø—Ä–∞–≤–∏—Ç –≤–∞—à–µ–º—É —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫—É –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å')
    async def sendprofile(self, inter):
        try:
            await inter.response.defer(ephemeral=True)
        except HTTPException:
            pass
        post = {
            "_id": inter.author.id,
            "messages": 0,
            "chats": 0,
            "rep": 0,
            "warns": 0,
            "last_comp": 0,
            "bot_chat_id": 0,
            "banned": 0,
            "stop_m": 0,
            "aboutme": "–ù–µ —É–∫–∞–∑–∞–Ω–æ",
            "age": 0,
            "name": "–ù–µ —É–∫–∞–∑–∞–Ω–æ",
            "gender": "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
        }
        if 0 == self.stats.count_documents({"_id": inter.author.id}):
            self.stats.insert_one(post)
        try:
            comp = self.collection.find_one({'_id': inter.author.id})['comp']
        except:
            comp = 0
        if comp is None or comp == 0:
            emb = disnake.Embed(title="–û—à–∏–±–∫–∞!",
                                description="–í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∞–Ω–æ–Ω–∏–º–Ω–æ–º —á–∞—Ç–µ!",
                                color=disnake.Color.red(), timestamp=datetime.datetime.now())
            emb.set_footer(text=f"{inter.author.name}", icon_url=inter.author.avatar)
            await inter.send(embed=emb, ephemeral=True)
        else:
            try:
                guild = self.collection.find_one({'_id': comp})['guild']
                guild = await self.bot.fetch_guild(guild)
            except:
                guild = None
            if guild is None:
                pass
            else:
                try:
                    rep = self.stats.find_one({'_id': inter.author.id})['rep']
                except:
                    rep = 0
                if rep >= 0:
                    emoji = "üëç"
                else:
                    emoji = "üëé"

                name = self.stats.find_one({'_id': inter.author.id})['name']
                age = self.stats.find_one({'_id': inter.author.id})['age']
                gender = self.stats.find_one({'_id': inter.author.id})['gender']
                aboutme = self.stats.find_one({'_id': inter.author.id})['aboutme']

                emb = disnake.Embed(title=f"–í–∞—à —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å", description=f"–ò–º—è **{name}**\n"
                                                                                               f"–í–æ–∑—Ä–∞—Å—Ç **{'–ù–µ —É–∫–∞–∑–∞–Ω' if age == 0 else age}**\n"
                                                                                               f"–ü–æ–ª **{gender}**\n\n"
                                                                                               f"–û–±–æ –º–Ω–µ\n`{aboutme}`\n\n"
                                                                                               f"*–ï–≥–æ –Ω–∏–∫:* **[{inter.author.name}](https://discordapp.com/users/{inter.author.id}/)**\n"
                                                                                               f"*–ü–∏–Ω–≥:* {inter.author.mention}",
                                    color=disnake.Color.random(), timestamp=datetime.datetime.now())
                emb.set_thumbnail(url=inter.author.avatar)
                emb.set_footer(text=f"{inter.author.name} | {inter.author.id}", icon_url=inter.author.avatar)
                try:
                    memberx = await guild.fetch_member(comp)
                    await memberx.send(embed=emb)
                except:
                    emb = disnake.Embed(title="–û—à–∏–±–∫–∞!",
                                        description="–Ø –Ω–µ —Å–º–æ–≥ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫—É –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å!",
                                        color=disnake.Color.red(), timestamp=datetime.datetime.now())
                    emb.set_footer(text=f"{inter.author.name}", icon_url=inter.author.avatar)
                    await inter.send(embed=emb, ephemeral=True)
                else:
                    emb = disnake.Embed(title="–£—Å–ø–µ—à–Ω–æ",
                                        description="–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫—É —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å!",
                                        color=disnake.Color.random(), timestamp=datetime.datetime.now())
                    emb.set_footer(text=f"{inter.author.name}", icon_url=inter.author.avatar)
                    await inter.send(embed=emb, ephemeral=True)

    @commands.slash_command(name="profile", description="–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–≤–∞—Å –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω)", dm_permission=False,
                            options=[
                                Option("member", "–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", OptionType.user, required=False),
                            ])
    async def profile(self, inter, member=None):
        try:
            await inter.response.defer(ephemeral=True)
        except HTTPException:
            pass
        if member is None:
            member = inter.author
        post = {
            "_id": member.id,
            "messages": 0,
            "chats": 0,
            "rep": 0,
            "warns": 0,
            "last_comp": 0,
            "bot_chat_id": 0,
            "banned": 0,
            "stop_m": 0,
            "aboutme": "–ù–µ —É–∫–∞–∑–∞–Ω–æ",
            "age": 0,
            "name": "–ù–µ —É–∫–∞–∑–∞–Ω–æ",
            "gender": "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
        }
        if 0 == self.stats.count_documents({"_id": member.id}):
            self.stats.insert_one(post)

        messages = self.stats.find_one({'_id': member.id})['messages']
        chats = self.stats.find_one({'_id': member.id})['chats']
        try:
            rep = self.stats.find_one({'_id': member.id})['rep']
        except:
            rep = 0
        if rep >= 0:
            emoji = "üëç"
        else:
            emoji = "üëé"

        class Buttons(disnake.ui.View):
            def __init__(self):
                super().__init__(timeout=120)

            async def on_timeout(self):
                try:
                    await inter.delete_original_message()
                except:
                    pass

            @disnake.ui.button(emoji="‚öô", label="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å", style=disnake.ButtonStyle.grey)
            async def previous(self, button, inter):
                await inter.response.send_modal(MyModal())

        class MyModal(disnake.ui.Modal):
            def __init__(self):
                # –î–µ—Ç–∞–ª–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∏ –µ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
                self.cluster = MongoClient(config.config["database"])
                self.stats = self.cluster.AnonChat.stats
                components = [
                    disnake.ui.TextInput(
                        label="–ò–º—è",
                        placeholder="–û–ª–µ–≥",
                        custom_id="name",
                        style=disnake.TextInputStyle.short,
                        max_length=16,
                        min_length=2
                    ),
                    disnake.ui.TextInput(
                        label="–í–æ–∑—Ä–∞—Å—Ç",
                        placeholder="14+",
                        custom_id="age",
                        style=disnake.TextInputStyle.single_line,
                        max_length=2,
                        min_length=2
                    ),
                    disnake.ui.TextInput(
                        label="–ü–æ–ª",
                        placeholder="–ú/–ñ",
                        custom_id="gender",
                        style=disnake.TextInputStyle.single_line,
                        max_length=1,
                        min_length=1
                    ),
                    disnake.ui.TextInput(
                        label="–û–±–æ –º–Ω–µ",
                        placeholder="–°–∞–Ω—è, —Ä–∞–∑—Ä–∞–± –±–æ—Ç–∞, –º–æ–ª–æ–¥–µ—Ü –≤ –æ–±—â–µ–º",
                        custom_id="aboutme",
                        style=disnake.TextInputStyle.single_line,
                        max_length=75,
                        min_length=10
                    )
                ]
                super().__init__(
                    title="–ü—Ä–æ—Ñ–∏–ª—å",
                    custom_id="profile",
                    components=components,
                )

            async def callback(self, interr: disnake.ModalInteraction):
                for key, value in interr.text_values.items():
                    if key.capitalize() == "Name":
                        self.stats.update_one({"_id": member.id}, {"$set": {'name': value}})
                    if key.capitalize() == "Age":
                        try:
                            value = int(value)
                        except:
                            pass
                        else:
                            self.stats.update_one({"_id": member.id}, {"$set": {'age': value}})
                    if key.capitalize() == "Gender":
                        if value.lower() == "–º":
                            self.stats.update_one({"_id": member.id}, {"$set": {'gender': "–ú—É–∂—Å–∫–æ–π"}})
                        elif value.lower() == "–∂":
                            self.stats.update_one({"_id": member.id}, {"$set": {'gender': "–ñ–µ–Ω—Å–∫–∏–π"}})
                    if key.capitalize() == "Aboutme":
                        self.stats.update_one({"_id": member.id}, {"$set": {'aboutme': value}})

                emb = disnake.Embed(title="–£—Å–ø–µ—à–Ω–æ!", description="–í—ã –æ–±–Ω–æ–≤–∏–ª–∏ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å",
                                    color=disnake.Color.random())
                emb.set_footer(text=f"{interr.author}", icon_url=inter.author.avatar)
                await interr.send(embed=emb, ephemeral=True)

        name = self.stats.find_one({'_id': member.id})['name']
        age = self.stats.find_one({'_id': member.id})['age']
        gender = self.stats.find_one({'_id': member.id})['gender']
        aboutme = self.stats.find_one({'_id': member.id})['aboutme']

        emb1 = disnake.Embed(title=f"–ü—Ä–æ—Ñ–∏–ª—å {member.name}", description="",
                             color=disnake.Color.random(), timestamp=datetime.datetime.now())
        emb1.set_thumbnail(url=member.avatar)
        emb1.set_footer(text=f"{member.name} | {member.id}", icon_url=member.avatar)
        emb1.add_field(name="–ò–º—è:", value=f"`{name}`", inline=True)
        emb1.add_field(name="–í–æ–∑—Ä–∞—Å—Ç:", value=f"`{'–ù–µ —É–∫–∞–∑–∞–Ω' if age == 0 else age}`", inline=True)
        emb1.add_field(name="–ü–æ–ª:", value=f"`{gender}`", inline=True)
        emb1.add_field(name="–û–±–æ –º–Ω–µ:", value=f"`{aboutme}`", inline=False)
        emb1.add_field(name="–ë—ã–ª –≤ —á–∞—Ç–∞—Ö:", value=f"`{chats}`", inline=True)
        emb1.add_field(name="–ù–∞–ø–∏—Å–∞–ª —Å–æ–æ–±—â–µ–Ω–∏–π:", value=f"`{messages}`", inline=True)
        emb1.add_field(name="–†–µ–ø—É—Ç–∞—Ü–∏—è:", value=f"`{rep}`{emoji}", inline=True)

        if member == inter.author:
            await inter.send(embed=emb1, view=Buttons())
        else:
            await inter.send(embed=emb1)

    @commands.slash_command(name="bug", description="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á—ë—Ç –æ–± –æ—à–∏–±–∫–µ –≤ –±–æ—Ç–µ", dm_permission=False)
    async def bug(self, inter, text: str = commands.Param(name="–ø—Ä–æ–±–ª–µ–º–∞", description="–ø–∏—à–∏—Ç–µ, –≤ —á—ë–º –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –±–∞–≥ –∏ –∫–∞–∫ –æ–Ω –ø–æ–ª—É—á–∞–µ—Ç—Å—è", min_length=50), att: disnake.Attachment = commands.Param(name="—Å–∫—Ä–∏–Ω—à–æ—Ç", description="–ü–æ–∫–∞–∂–∏—Ç–µ —Ä–µ–∞–∫—Ü–∏—é –æ—Ç –±–æ—Ç–∞ –ø—Ä–∏ –±–∞–≥–µ")):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–∞—à—É –∂–∞–ª–æ–±—É"""
        try:
            await inter.response.defer(ephemeral=True)
        except HTTPException:
            pass
        emb1 = disnake.Embed(title=f"–ë–∞–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!",
                             description=f'{inter.author.mention}, –≤ —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ —É—Å—Ç—Ä–∞–Ω–∏—Ç —ç—Ç—É –æ—à–∏–±–∫—É, —Å–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–º–æ—â—å!',
                             color=disnake.Color.random(), timestamp=datetime.datetime.now())
        await inter.send(embed=emb1)
        emb = disnake.Embed(title=f"–ù–∞—à–ª–∏ –Ω–æ–≤—ã–π –±–∞–≥!",
                            description=f"**–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å:** {inter.author}\n**ID:** {inter.author.id}\n**–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏:**\n\n`{text}`",
                            color=disnake.Color.random(), timestamp=datetime.datetime.now())

        emb.set_thumbnail(url=inter.author.avatar)
        emb.set_footer(text=f"{inter.author.name}", icon_url=inter.author.avatar)
        emb.set_image(url=att)
        guild = await self.bot.fetch_guild(1103758994398523432)
        channel = await guild.fetch_channel(1103761364910100590)
        await channel.send(content=f"{inter.author.mention}", embed=emb)

    @commands.slash_command(name="up", description="–ê–ø–Ω—É—Ç—å –±–æ—Ç–∞", dm_permission=False)
    async def up(self, inter: disnake.CommandInteraction):
        try:
            await inter.response.defer(ephemeral=True)
        except:
            pass
        response = requests.post(
            url='https://api.boticord.top/v3/resources/ups/service/prepare',
            headers={
                'Authorization': config.config['Boticord'],
                'Content-Type': 'application/json'
            },
            json={
                "token": config.config['Boticord'],
                "resource": "1078924878071214110",
                "user": str(inter.author.id),
                "language": "ru"
            }
        )

        if response.status_code == 201:
            data = response.json()
            img_data = data['result']['captcha']['image'].encode()
            content = base64.b64decode(img_data)
            bytes = io.BytesIO(content)

            user = self.captcha.find_one({'_id': inter.author.id})
            if user is None:
                post = {
                    "_id": inter.author.id,
                    "captcha": data['result']['captcha']['id']
                }
                self.captcha.insert_one(post)
            else:
                self.captcha.update_one({"_id": inter.author.id}, {"$set": {'captcha': data['result']['captcha']['id']}})

            buttons = disnake.ui.View()

            buttons.add_item(disnake.ui.Button(
                label='',
                emoji=f'{data["result"]["captcha"]["choices"][0]}',
                style=disnake.ButtonStyle.gray,
                custom_id="btn1")
            )
            buttons.add_item(disnake.ui.Button(
                label='',
                emoji=f'{data["result"]["captcha"]["choices"][1]}',
                style=disnake.ButtonStyle.gray,
                custom_id="btn2")
            )
            buttons.add_item(disnake.ui.Button(
                label='',
                emoji=f'{data["result"]["captcha"]["choices"][2]}',
                style=disnake.ButtonStyle.gray,
                custom_id="btn3")
            )

            emb = disnake.Embed(
                title="–†–µ—à–∏—Ç–µ –∫–∞–ø—á—É",
                description="–í—ã–±–µ—Ä–∏ —ç–º–æ—Ü–∏—é, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ç–µ–∫—Å—Ç—É –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ",
                color=disnake.Color.random(),
                timestamp=datetime.datetime.now()
            )
            emb.set_image(file=disnake.File(bytes, filename="captcha.png"))
            emb.set_thumbnail(inter.author.avatar)
            emb.set_footer(text=f"{inter.author.name}", icon_url=f"{inter.author.avatar}")
            await inter.edit_original_message(embed=emb, view=buttons)
        elif response.status_code == 429:
            emb = disnake.Embed(
                title="–û—à–∏–±–∫–∞",
                description="–í—ã —É–∂–µ –Ω–µ–¥–∞–≤–Ω–æ –∞–ø–∞–ª–∏ —ç—Ç–æ–≥–æ –±–æ—Ç–∞!",
                color=disnake.Color.random(),
                timestamp=datetime.datetime.now()
            )
            emb.set_thumbnail(inter.author.avatar)
            emb.set_footer(text=f"{inter.author.name}", icon_url=f"{inter.author.avatar}")
            await inter.delete_original_message()
            await inter.send(embed=emb, ephemeral=True)
        else:
            emb = disnake.Embed(
                title="–û—à–∏–±–∫–∞",
                description="–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –≤—ã –Ω–∏ —Ä–∞–∑—É –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤—ã–≤–∞–ª–∏—Å—å –Ω–∞ —Å–∞–π—Ç–µ [Boticord](https://boticord.top/)\n"
                            "–ï—Å–ª–∏ –∂–µ —ç—Ç–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.",
                color=disnake.Color.random(),
                timestamp=datetime.datetime.now()
            )
            emb.set_thumbnail(inter.author.avatar)
            emb.set_footer(text=f"{inter.author.name}", icon_url=f"{inter.author.avatar}")
            await inter.delete_original_message()
            await inter.send(embed=emb, ephemeral=True)


def setup(bot):
    bot.add_cog(Slash(bot))
